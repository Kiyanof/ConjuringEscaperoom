// In your Redux store folder, create a file named "themeSlice.ts"
import { addModel } from '@/api/addModel';
import { updateModel } from '@/api/updateModel';
import { createSlice, PayloadAction } from '@reduxjs/toolkit';

interface playerInterface {
  _id: string,
  firstName: string,
  lastName: string,
  phoneNumber: string,
  age: string,
  name: string, 
  exprience: string,
  date: string,
  reference: string,
}

interface teamInterface {
  name: string, 
  exprience: string,
  date: string,
  reference: string,
}

interface player {
    player: playerInterface[],
    team: teamInterface
}

const initialState: player = {
    player: [],
    team: {
      name: '',
      exprience: '',
      date: '',
      reference: '',
    }
};

// Create a Redux slice
const playerSlice = createSlice({
  name: 'player',
  initialState,
  reducers: {
    initiatePlayers: (state, action) => {
      state.player = action.payload.value;
    },
    setTeamState: (state, action) => {
      const value = action.payload.value
      const newState = {...value}
      state.team = newState
    },
    pushPlayer: (state, action) => {
      const value = action.payload.value
      const newState = value
      console
      state.player = newState
    },
    setPlayer: (state, action) => {
      const newState = [...state.player]
      const index = action.payload.index
      const id = newState[index]._id
      newState[index] = action.payload.value
      state.player = newState
      updateModel(id, action.payload.value, 'game/player')
    },
    publishTeam: (state) => {
      const items = state.player
      console.log(items)
      items.map((val, index) => {
        addModel({...val, ...state.team}, 'game/player')
      })
    },
  },
});

// Export the actions generated by createSlice
export const { initiatePlayers, setPlayer, pushPlayer, setTeamState, publishTeam} = playerSlice.actions;

// Export the reducer
export default playerSlice.reducer;
