// In your Redux store folder, create a file named "themeSlice.ts"
import { createSlice, PayloadAction } from '@reduxjs/toolkit';

// Define the initial state for the theme
interface toolbarSection {
  title: string,
  visible: boolean,
}
interface CrossState {
  ipAddresses: string[],
  bluetoothUUID: string[],
  toolbarViews: toolbarSection[],
}

const initialState: CrossState = {
  ipAddresses: [
    '',
  ],
  bluetoothUUID: [
    '',
  ],
  toolbarViews: [
    {title: 'Actuator', visible: true},
    {title: 'CrossesSensitives', visible: true},
    {title: 'RelaysSensitives', visible: true},
    {title: 'Delays', visible: true},
    {title: 'Score', visible: true},
    {title: 'CrossesRSSI', visible: true},
    {title: 'RelaysRSSI', visible: true},
    {title: 'DeviceInfo', visible: true},
  ]
};

// Create a Redux slice
const themeSlice = createSlice({
  name: 'cross',
  initialState,
  reducers: {
    setToolbarView: (state, action: PayloadAction<number>) => {
      const newToolbarVeiws = [...state.toolbarViews]
      newToolbarVeiws[action.payload].visible = !newToolbarVeiws[action.payload].visible
      state.toolbarViews = newToolbarVeiws
    },
  },
});

// Export the actions generated by createSlice
export const { setToolbarView } = themeSlice.actions;

// Export the reducer
export default themeSlice.reducer;
